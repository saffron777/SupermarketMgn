@page "/categories"
@using WebApp.Helper
@inject NavigationManager navigationManager
@inject UseCases.IViewCategoriesUseCase viewCategoryUseCase
@inject UseCases.IDeleteCategoryUseCase  DeleteCategoryUseCase
@inject IJSRuntime js

<h3>Manage Categories</h3>

@if (categories != null)
{
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Description</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var category in categories)
			{
				<tr>
					<td>@category.Name</td>
					<td>@category.Description</td>
					<td>
						<button type="button" class="btn btn-link" @onclick="@(()=> OnEditCategory(category))">Edit</button>
						@*<button type="button" class="btn btn-link" @onclick="@(()=> OnDeleteCategory(category.CategoryId))">Delete</button>*@
						<button type="button" class="btn btn-link" @onclick="@(()=> {confirm = true; CategoryId = category.CategoryId; })">Delete</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}
<br />
<button type="button" class="btn btn-primary" @onclick="OnClickToAddCategory">Add Category</button>
<MessageBox Titulo="Aviso" onConfirm="() => OnDeleteCategory(CategoryId)" onCancel = "() => confirm = false"  MostrarConfirmation = "confirm"  ><h3>Desea eliminar el registro?</h3></MessageBox>

@code {
	private List<Category> categories;
	private bool confirm = false;
	private int CategoryId;

	protected override void OnInitialized()
	{
		base.OnInitialized();

		LoadCategories();
	}

	private void OnClickToAddCategory()
	{
		navigationManager.NavigateTo("/addCategory");
	}

	private void OnEditCategory(Category category)
	{
		navigationManager.NavigateTo($"/editCategory/{category.CategoryId}");
	}

	private async Task OnDeleteCategory(int categoryId)
	{
		//var confirm = await js.Confirm($"Are you sure you want to delete the Category?");
				
		//if (!confirm)
		//          return;

		await DeleteCategoryUseCase.Delete(categoryId);
		confirm = false;
		LoadCategories();
	}

	private void LoadCategories()
	{
		categories = viewCategoryUseCase.Execute()?.ToList();
	}
}
